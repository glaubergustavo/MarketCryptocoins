//
//  CoinsListPresenter.swift
//  MarketCryptocoins
//
//  Created by madeinweb on 09/09/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CoinsListPresentationLogic {
    func presentGlobalValues(response: CoinsList.FetchGlobalValues.Response)
    func presentErrorForGlobalvalues(baseCoin: CoinsFilterEnum)
    func presentListCoins(response: [CoinsList.FetchListCoins.Response])
    func presentError(error: CryptocurrenciesError)
}

class CoinsListPresenter: CoinsListPresentationLogic {
    weak var viewController: CoinsListDisplayLogic?

    func presentGlobalValues(response: CoinsList.FetchGlobalValues.Response) {
        var globalValues: [CoinsList.FetchGlobalValues.ViewModel.GlobalValue] = []
        
        for (_, value) in response.totalMarketCap {
            
            let valueAndchangePercentage = UtilFacade.setGreenOrRedColorAndJoinText(value: "\(value.toCurrency(from: response.baseCoin))", changePercentage: response.changePercentage)
            
            globalValues.append(CoinsList.FetchGlobalValues.ViewModel.GlobalValue(title: "Capitalização de Mercado Global", value: valueAndchangePercentage))
        }
        
        for (_, value) in response.totalVolume {
            
            let valueAndchangePercentage = UtilFacade.setGreenOrRedColorAndJoinText(value: "\(value.toCurrency(from: response.baseCoin))", changePercentage: response.changePercentage)
            
            globalValues.append(CoinsList.FetchGlobalValues.ViewModel.GlobalValue(title: "Volume em 24h", value: valueAndchangePercentage))
        }
        
        let viewModel = CoinsList.FetchGlobalValues.ViewModel(globalValues: globalValues)
        
        viewController?.displayGlobalValues(viewModel: viewModel)
    }
    
    func presentErrorForGlobalvalues(baseCoin: CoinsFilterEnum) {
        let globalValues: [CoinsList.FetchGlobalValues.ViewModel.GlobalValue] = [
            CoinsList.FetchGlobalValues.ViewModel.GlobalValue(title: "Capitalização de Mercado Global", value: NSMutableAttributedString(string: 0.0.toCurrency(from: baseCoin))),
            CoinsList.FetchGlobalValues.ViewModel.GlobalValue(title: "Volume em 24h", value: NSMutableAttributedString(string: 0.0.toCurrency(from: baseCoin)))
        ]
        
        let viewModel = CoinsList.FetchGlobalValues.ViewModel(globalValues: globalValues)
        
        viewController?.displayGlobalValues(viewModel: viewModel)
    }
    
    func presentListCoins(response: [CoinsList.FetchListCoins.Response]) {
        let coins = response.map { response in
            var rank = "-"
            
            if let marketCapRank = response.marketCapRank {
                rank = "\(marketCapRank)"
            }
            
            let priceChangePercentageAttrString = UtilFacade.setGreenOrRedColor(value: "\(response.priceChangePercentage.toPercentage())", changePercentage: response.priceChangePercentage)
            
            return CoinsList.FetchListCoins.ViewModel.Coin(id: response.id,
                                                           name: response.name,
                                                           rank: rank,
                                                           iconUrl: response.image,
                                                           symbol: response.symbol.uppercased(),
                                                           price: response.currentPrice.toCurrency(from: response.baseCoin),
                                                           priceChangePercentage: priceChangePercentageAttrString,
                                                           marketCap: response.marketCap.toCurrency(from: response.baseCoin))
        }
        
        let viewModel = CoinsList.FetchListCoins.ViewModel(coins: coins)
        
        viewController?.displayListCoins(viewModel: viewModel)
    }
    
    func presentError(error: CryptocurrenciesError) {
        viewController?.displayError(error: error.errorDescription)
    }
 
}
